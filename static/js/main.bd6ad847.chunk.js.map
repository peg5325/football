{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Party.js","routes/Home.js","routes/Profile.js","components/MakeParty.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faFutbol","color","size","style","marginBottom","faGoogle","faGithub","Party","partyObj","isOwner","editing","setEditing","title","newTitle","setNewTitle","contents","newContents","setNewContents","onDeleteClick","ok","window","confirm","doc","id","delete","toggleEditing","update","autoFocus","faTrash","faPencilAlt","Home","userObj","partys","setPartys","useEffect","collection","onSnapshot","snapshot","partyArray","docs","map","to","party","creatorId","uid","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","marginTop","signOut","push","MakeParty","setTitle","setContents","add","createdAt","Date","now","maxLength","Navigation","display","justifyContent","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd6ad847.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCwsrE3qZ9uC1hnrBEtZhqx0T-jeLvr58w\",\r\n  authDomain: \"football-af800.firebaseapp.com\",\r\n  projectId: \"football-af800\",\r\n  storageBucket: \"football-af800.appspot.com\",\r\n  messagingSenderId: \"865274080711\",\r\n  appId: \"1:865274080711:web:fa618d34052395ce147de2\",\r\n  measurementId: \"G-GG320M4ECX\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          className=\"authInput\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { faFutbol } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faFutbol}\r\n        color={\"#04AAFF\"}\r\n        size=\"5x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Party = ({ partyObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTitle, setNewTitle] = useState(partyObj.title);\r\n  const [newContents, setNewContents] = useState(partyObj.contents);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this party?\");\r\n    console.log(ok);\r\n    if (ok) {\r\n      await dbService.doc(`partys/${partyObj.id}`).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`partys/${partyObj.id}`).update({\r\n      title: newTitle,\r\n      contents: newContents,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"title\") {\r\n      setNewTitle(value);\r\n    } else if (name === \"contents\") {\r\n      setNewContents(value);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"party\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your title\"\r\n              value={newTitle}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              name=\"title\"\r\n            />\r\n            <textarea\r\n              id=\"testResult\"\r\n              placeholder=\"Edit your contents\"\r\n              value={newContents}\r\n              required\r\n              onChange={onChange}\r\n              name=\"contents\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Party\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{partyObj.title}</h4>\r\n          <p>{partyObj.contents}</p>\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Party;\r\n","import { dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Party from \"components/Party\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [partys, setPartys] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"partys\").onSnapshot((snapshot) => {\r\n      const partyArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setPartys(partyArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/make\" className=\"makeParty\">\r\n        방 만들기\r\n      </Link>\r\n      <div id=\"testResult\">\r\n        {partys.map((party) => (\r\n          <Party\r\n            key={party.id}\r\n            partyObj={party}\r\n            isOwner={party.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import { dbService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MakeParty = ({ userObj }) => {\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [contents, setContents] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.collection(\"partys\").add({\r\n      title: title,\r\n      contents: contents,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n    });\r\n    setTitle(\"\");\r\n    setContents(\"\");\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"title\") {\r\n      setTitle(value);\r\n    } else if (name === \"contents\") {\r\n      setContents(value);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          onChange={onChange}\r\n          name=\"title\"\r\n          type=\"text\"\r\n          placeholder=\"제목을 입력해주세요.\"\r\n          value={title}\r\n          required\r\n          maxLength={120}\r\n        />\r\n        <br />\r\n        <textarea\r\n          onChange={onChange}\r\n          name=\"contents\"\r\n          placeholder=\"내용을 입력해주세요.\"\r\n          value={contents}\r\n          required\r\n          className=\"factoryArea\"\r\n        />\r\n        <input type=\"submit\" value=\"게시하기\" className=\"factoryInput__arrow\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default MakeParty;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faFutbol, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faFutbol} color={\"#04AAFF\"} size=\"4x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 프로필`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport MakeParty from \"components/MakeParty\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Route exact path=\"/make\">\r\n              <MakeParty userObj={userObj} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}